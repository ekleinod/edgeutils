<?xml version="1.0" encoding="UTF-8"?>

<!--
XSD Schema for common xsd structures.

- Info
	- extends: TimestampType
	- elements: docversion, appversion, creator
- TimestampType
	- elements: created, modified
- Version
	- elements: major, minor, patch, additional
	- extending class: ...ext.VersionExt
- IntGreaterEqualNull
	- an integer that is greater or equal to 0
- RefType
	- reference to an id type
- IDType
	- element with an id that can be referenced

## Legal stuff

Copyright 2014-2017 Ekkart Kleinod <ekleinod@edgesoft.de>

This file is part of edgeUtils.

edgeUtils is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

edgeUtils is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with edgeUtils.  If not, see <http://www.gnu.org/licenses/>.

@author Ekkart Kleinod
@version 0.9.8
@since 0.4.0

-->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
						xmlns:jxb="http://java.sun.com/xml/ns/jaxb"
						jxb:version="2.1">

	<!-- Document metainformation. -->
	<xsd:complexType name="Info">
		<xsd:complexContent>
			<xsd:extension base="TimestampType">
				<xsd:sequence>
					<xsd:element name="docversion" type="Version" minOccurs="0" maxOccurs="1" />
					<xsd:element name="appversion" type="Version" minOccurs="1" maxOccurs="1" />
					<xsd:element name="creator" type="xsd:string" minOccurs="0" maxOccurs="1" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- Timestamps: creation, last modification. -->
	<xsd:complexType name="TimestampType">
		<xsd:complexContent>
			<xsd:extension base="ModelClass">
				<xsd:sequence>
					<xsd:element name="created" type="xsd:dateTime" minOccurs="1" maxOccurs="1" />
					<xsd:element name="modified" type="xsd:dateTime" minOccurs="1" maxOccurs="1" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- Version: Major.Minor.Patch Additional -->
	<xsd:complexType name="Version">
		<xsd:annotation>
			<xsd:documentation>Implementing class is not inline, because otherwise generation outside of edgeutils would fail.
Therefore, this declaration is given in the `commons-only.xjb` bindings file.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ModelClass">
				<xsd:sequence>
					<xsd:element name="major" type="IntGreaterEqualNull" minOccurs="1" maxOccurs="1" />
					<xsd:element name="minor" type="IntGreaterEqualNull" minOccurs="0" maxOccurs="1" />
					<xsd:element name="patch" type="IntGreaterEqualNull" minOccurs="0" maxOccurs="1" />
					<xsd:element name="additional" type="Additional" minOccurs="0" maxOccurs="1" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- BooleanProperty type -->
	<xsd:simpleType name="BooleanProperty">
		<xsd:restriction base="xsd:boolean" />
	</xsd:simpleType>

	<!-- DoubleProperty type -->
	<xsd:simpleType name="DoubleProperty">
		<xsd:restriction base="xsd:double" />
	</xsd:simpleType>

	<!-- IntegerProperty type -->
	<xsd:simpleType name="IntegerProperty">
		<xsd:restriction base="xsd:int" />
	</xsd:simpleType>

	<!-- LocalDateProperty type -->
	<xsd:simpleType name="LocalDateProperty">
		<xsd:restriction base="xsd:date" />
	</xsd:simpleType>

	<!-- LocalDateTimeProperty type -->
	<xsd:simpleType name="LocalDateTimeProperty">
		<xsd:restriction base="xsd:dateTime" />
	</xsd:simpleType>

	<!-- LocalTimeProperty type -->
	<xsd:simpleType name="LocalTimeProperty">
		<xsd:restriction base="xsd:time" />
	</xsd:simpleType>

	<!-- StringProperty type -->
	<xsd:simpleType name="StringProperty">
		<xsd:restriction base="xsd:string" />
	</xsd:simpleType>

	<!-- Additional type. -->
	<xsd:complexType name="Additional">
		<xsd:simpleContent>
			<xsd:extension base="IntGreaterEqualNull">
				<xsd:attribute name="type" type="AdditionalType" use="required" />
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>

	<!-- Integer equal or greater than 0 -->
	<xsd:simpleType name="IntGreaterEqualNull">
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="0" />
		</xsd:restriction>
	</xsd:simpleType>

	<!-- Additional types -->
	<xsd:simpleType name="AdditionalType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="pre" />
			<xsd:enumeration value="alpha" />
			<xsd:enumeration value="beta" />
		</xsd:restriction>
	</xsd:simpleType>

	<!-- Generic type for references to ids (casting in java code required) -->
	<xsd:complexType name="RefType">
		<xsd:annotation>
			<xsd:documentation>Connection of idref to IDType is not inline, because otherwise generation outside of edgeutils would fail.
Therefore, this connection is made in the `commons-only.xjb` bindings file.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ModelClass">
				<xsd:attribute name="idref" type="xsd:IDREF" use="required" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- Generic type for elements with ids (casting in java code required) -->
	<xsd:complexType name="IDType" abstract="true">
		<xsd:complexContent>
			<xsd:extension base="ModelClass">
				<xsd:attribute name="id" type="xsd:ID" use="optional" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- Base class for all model classes - eases the identification of model classes in source code. -->
	<xsd:complexType name="AbstractModelClass" abstract="true">
		<xsd:complexContent>
			<xsd:extension base="ModelClass">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!--
		Base class for all model classes - eases the identification of model classes in source code.

		This class is implemented by ModelClassExt. This is defined in commons-only.xjb, because in commons-reuse.xjb this causes
		compile errors of jaxb. Thus, there is a second ModelClass - AbstractModelClass which just extends this class. This way,
		every type that extends AbstractModelClass extends the ModelClassExt class, which is needed for combo boxes etc.

		I did not see another way to implement this, maybe there is one I don't see. In that case, AbstractModelClass should be
		deleted. Until then, remember to extend AbstractModelClass.
	-->
	<xsd:complexType name="ModelClass" abstract="true">
	</xsd:complexType>

</xsd:schema>

<!-- EOF -->

